/* $NetBSD: token-comment.0,v 1.11 2021/10/12 21:08:37 rillig Exp $ */
/* $FreeBSD$ */

/*
 * Tests for formatting comments.  C99 defines block comments and end-of-line
 * comments.  Indent further distinguishes box comments that are a special
 * kind of block comments.
 *
 * See opt-fc1, opt-nfc1.
 */

/* 456789 123456789 123456789 123456789 123456789 123456789 123456789 12345 */
/* 456789 123456789 123456789 123456789 123456789 123456789 123456789 123456 */
/* 456789 123456789 123456789 123456789 123456789 123456789 123456789 1234567 */
/* 456789 123456789 123456789 123456789 123456789 123456789 123456789 12345678 */
/* 456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 */

/* $ In the following comments, the line length is measured after formatting. */
/* x							. line length 75*/
/* x							.. line length 76*/
/* x							... line length 77*/
/* x							.... line length 78*/
/* x							..... line length 79*/
/* x							...... line length 80*/
/* x							....... line length 81*/
/* x							........ line length 82*/

/* And now the same idea but the comment ends with a space already. */
/* x							.... line length 78 */
/* x							..... line length 79 */

/* This is a traditional C block comment. */

// This is a C99 line comment.

/*
 * This is a box comment since its first line (above this line) is empty.
 *
 *
 *
 * Its text gets wrapped.
 * Empty lines serve as paragraphs.
 */

/**
 * This is a box comment
 * that is not re-wrapped.
 */

/*-
 * This is a box comment
 * that is not re-wrapped.
 * It is often used for copyright declarations.
 */

void
function(void)
{
	/* This is a traditional C block comment. */

	/*
	 * This is a box comment.
	 *
	 * It starts in column 9, not 1,
	 * therefore it gets re-wrapped.
	 */

	/**
	 * This is a box comment
	 * that is not re-wrapped, even though it starts in column 9, not 1.
	 */

	/*-
	 * This is a box comment
	 * that is not re-wrapped.
	 * It is often used for copyright declarations.
	 */

	int decl;	/* declaration comment */

	int decl;	/* short
			 * multi-line
			 * declaration
			 * comment */

	int decl;	/* long single-line declaration comment that is longer than the allowed line width */

	int decl;	/* long multi-line declaration comment
 * that is longer than
 * the allowed line width */

	int decl;	// C99 declaration comment

	{
		int decl;	/* indented declaration */
		{
			int decl;	/* indented declaration */
			{
				int decl;	/* indented declaration */
				{
					int decl;	/* indented declaration */
				}
			}
		}
	}

	code();			/* code comment */
	code();			/* code comment _________ to line length 78 */
	code();			/* code comment __________ to line length 79 */
	code();			/* code comment ___________ to line length 80 */
	code();			/* code comment ____________ to line length 81 */
	code();			/* code comment _____________ to line length 82 */

/* $ In the following comments, the line length is measured after formatting. */
	code();			/* code comment _________ to line length 78*/
	code();			/* code comment __________ to line length 79*/
	code();			/* code comment ___________ to line length 80*/
	code();			/* code comment ____________ to line length 81*/
	code();			/* code comment _____________ to line length 82*/

	code();			/* short
				 * multi-line
				 * code
				 * comment */

	code();			/* long single-line code comment that is longer than the allowed line width */

	code();			/* long multi-line code comment
 * that is longer than
 * the allowed line width */

	code();			// C99 code comment
	code();			// C99 code comment ________ to line length 78
	code();			// C99 code comment _________ to line length 79
	code();			// C99 code comment __________ to line length 80
	code();			// C99 code comment ___________ to line length 81
	code();			// C99 code comment ____________ to line length 82

	if (cond) /* comment */
		if (cond) /* comment */
			if (cond) /* comment */
				if (cond) /* comment */
					if (cond) /* comment */
						code(); /* comment */
}

/*INDENT OFF*/
/* No formatting takes place here. */
int format( void ) {{{
/*INDENT ON*/
}}}

/* INDENT OFF */
void indent_off ( void ) ;
/*  INDENT */
void indent_on ( void ) ;
/* INDENT OFF */
void indent_off ( void ) ;
	/* INDENT ON */
void indent_on ( void ) ;	/* the comment may be indented */
/* INDENT		OFF					*/
void indent_off ( void ) ;
/* INDENTATION ON */
void indent_still_off ( void ) ;	/* due to the word 'INDENTATION' */
/* INDENT ON * */
void indent_still_off ( void ) ;	/* due to the extra '*' at the end */
/* INDENT ON */
void indent_on ( void ) ;
/* INDENT: OFF */
void indent_still_on ( void ) ;	/* due to the colon in the middle */
/* INDENT OFF */		/* extra comment */
void indent_still_on ( void ) ;	/* due to the extra comment to the right */

/*
	 * this
		 * is a boxed
			 * staircase.
*
* Its paragraphs get wrapped.

There may also be
		lines without asterisks.

 */

void loop(void)
{
while(cond)/*comment*/;

	while(cond)
	/*comment*/;
}
