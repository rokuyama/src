/* $NetBSD: token-preprocessing.0.stdout,v 1.7 2021/10/08 21:32:28 rillig Exp $ */
/* $FreeBSD$ */

/*-
 * Tests for indenting preprocessing directives:
 *
 * #define
 * #ifdef
 * #pragma
 * #line
 */

#include <system-header.h>
#include "local-header.h"

#if 0
#else
#endif

#if 0				/* if comment */
#else				/* else comment */
#endif				/* endif comment */

#if 0				/* outer if comment */
/* $ XXX: The indentation is removed, which can get confusing */
#if nested			/* inner if comment */
#else				/* inner else comment */
#endif				/* inner endif comment */
#endif				/* outer endif comment */

#define multi_line_definition /* first line
 * middle
 * final line
 */ actual_value

#define comment_in_string_literal "/* no comment "
int		this_is_an_ordinary_line_again;

/*
 * Before indent.c 1.129 from 2021-10-08, indent mistakenly interpreted quotes
 * in comments as starting a string literal. The '"' in the comment started a
 * string, the next '"' finished the string, and the following '/' '*' was
 * interpreted as the beginning of a comment. This comment lasted until the
 * next '*' '/', which in this test is another preprocessor directive, solely
 * for symmetry.
 *
 * The effect was that the extra space after d2 was not formatted, as that
 * line was considered part of the comment.
 */
int		d1;
#define confuse_d /*"*/ "/*"
int		d2;
#define resolve_d "*/"
int		d3;

int		s1;
#define confuse_s /*'*/ '/*'
int		s2;
#define resolve_s '*/'
int		s3;

/*
 * A preprocessing directive inside an expression keeps the state about
 * whether the next operator is unary or binary.
 */
int		binary_plus = 3
#define intermediate 1
+ 4;
int		unary_plus =
#define intermediate 1
+4;
