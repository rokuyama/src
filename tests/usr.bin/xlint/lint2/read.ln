# $NetBSD: read.ln,v 1.2 2021/08/24 23:38:51 rillig Exp $
#
# Cover each path of reading declarations, definitions and usages.

0 s read.c
S read.c

# Cover all tspec_t constants, in declaration order.
#
# The line numbers correspond to the constant values of tspec_t,
# with the 128-bit types included.
#
# NOTSPEC	cannot occur in lint1 output.
# SIGNED	cannot occur in lint1 output.
# UNSIGN	cannot occur in lint1 output.
103 d 0.103 e 4f103 F0 B	# BOOL		_Bool		f103(void);
104 d 0.104 e 4f104 F0 C	# CHAR		char		f104(void);
105 d 0.105 e 4f105 F0 sC	# SCHAR		signed char	f105(void);
106 d 0.106 e 4f106 F0 uC	# UCHAR		unsigned char	f106(void);
107 d 0.107 e 4f107 F0 S	# SHORT		short		f107(void);
108 d 0.108 e 4f108 F0 uS	# USHORT	unsigned short	f108(void);
109 d 0.109 e 4f109 F0 I	# INT		int		f109(void);
110 d 0.110 e 4f110 F0 uI	# UINT		unsigned int	f110(void);
111 d 0.111 e 4f111 F0 L	# LONG		long		f111(void);
112 d 0.112 e 4f112 F0 uL	# ULONG		unsigned long	f112(void);
113 d 0.113 e 4f113 F0 Q	# QUAD		long long	f113(void);
114 d 0.114 e 4f114 F0 uQ	# UQUAD		unsigned long long f114(void);
# INT128	works only in 64-bit mode, see read_lp64.
# UINT128	works only in 64-bit mode, see read_lp64.
117 d 0.117 e 4f117 F0 sD	# FLOAT		float		f117(void);
118 d 0.118 e 4f118 F0 D	# DOUBLE	double		f118(void);
119 d 0.119 e 4f119 F0 lD	# LDOUBLE	long double	f119(void);
120 d 0.120 e 4f120 F0 V	# VOID		void		f120(void);
121 d 0.121 e 4f121 F0 sT16tag121 # STRUCT	struct tag121	f121(void);
122 d 0.122 e 4f122 F0 uT16tag122 # UNION	union tag122	f122(void);
123 d 0.123 e 4f123 F0 eT16tag123 # ENUM	enum tag123	f123(void);
124 d 0.124 e 4f124 F0 PV	# PTR		void *		f124(void);
125 d 0.125 e 4a125 A7D		# ARRAY		extern double	a125[7];
126 d 0.126 e 4f126 F0 PF1DV	# FUNC		void (*f126(void))(double);
# COMPLEX	cannot occur in lint1 output.
127 d 0.127 e 4f127 F0 sX	# FCOMPLEX	float _Complex	f127(void);
128 d 0.128 e 4f128 F0 X	# COMPLEX	double _Complex	f128(void);
129 d 0.129 e 4f129 F0 lX	# LCOMPLEX	long double _Complex f129(void);

# Tagged types (struct, union, enum) can have tags or typedefs or be
# anonymous, but anonymous types are not usually used in external
# declarations.
#
# struct s_tag f201(void);
201 d 0.201 e 4f201 F0 sT15s_tag
# typedef struct {} s_def;
# s_def f202(void);
202 d 0.202 e 4f202 F0 sT25s_def
# struct { int member; } f203(void);
203 d 0.203 e 4f203 F0 sT3203.0.0

# Type qualifiers
#
# void f301(const int *);
301 d 0.301 e 4f301 F1 PcI V
# void f302(volatile int *);
302 d 0.302 e 4f302 F1 PvI V
# void f302(const volatile int *);
303 d 0.303 e 4f303 F1 PcvI V
