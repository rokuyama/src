# $NetBSD: read.ln,v 1.1 2021/08/07 21:24:14 rillig Exp $
#
# Cover each path of reading declarations, definitions and usages.

0sread.c
Sread.c

# Cover all tspec_t constants, in declaration order.
#
# The line numbers correspond to the constant values of tspec_t,
# with the 128-bit types included.
#
# NOTSPEC	cannot occur in lint1 output.
# SIGNED	cannot occur in lint1 output.
# UNSIGN	cannot occur in lint1 output.
103d0.103e4f103F0B		# BOOL		_Bool		f103(void);
104d0.104e4f104F0C		# CHAR		char		f104(void);
105d0.105e4f105F0sC		# SCHAR		signed char	f105(void);
106d0.106e4f106F0uC		# UCHAR		unsigned char	f106(void);
107d0.107e4f107F0S		# SHORT		short		f107(void);
108d0.108e4f108F0uS		# USHORT	unsigned short	f108(void);
109d0.109e4f109F0I		# INT		int		f109(void);
110d0.110e4f110F0uI		# UINT		unsigned int	f110(void);
111d0.111e4f111F0L		# LONG		long		f111(void);
112d0.112e4f112F0uL		# ULONG		unsigned long	f112(void);
113d0.113e4f113F0Q		# QUAD		long long	f113(void);
114d0.114e4f114F0uQ		# UQUAD		unsigned long long f114(void);
# INT128	works only in 64-bit mode, see read_lp64.
# UINT128	works only in 64-bit mode, see read_lp64.
117d0.117e4f117F0sD		# FLOAT		float		f117(void);
118d0.118e4f118F0D		# DOUBLE	double		f118(void);
119d0.119e4f119F0lD		# LDOUBLE	long double	f119(void);
120d0.120e4f120F0V		# VOID		void		f120(void);
121d0.121e4f121F0sT16tag121	# STRUCT	struct tag121	f121(void);
122d0.122e4f122F0uT16tag122	# UNION		union tag122	f122(void);
123d0.123e4f123F0eT16tag123	# ENUM		enum tag123	f123(void);
124d0.124e4f124FPV		# PTR		void *		f124(void);
125d0.125e4a125A7D		# ARRAY		extern double	a125[7];
126d0.126e4f126F0PF1DV		# FUNC		void (*f126(void))(double);
# COMPLEX	cannot occur in lint1 output.
127d0.127e4f127F0sX		# FCOMPLEX	float _Complex	f127(void);
128d0.128e4f128F0X		# COMPLEX	double _Complex	f128(void);
129d0.129e4f129F0lX		# LCOMPLEX	long double _Complex f129(void);

# Tagged types (struct, union, enum) can have tags or typedefs or be
# anonymous, but anonymous types are not usually used in external
# declarations.
#
# struct s_tag f201(void);
201d0.201e4f201F0sT15s_tag
# typedef struct {} s_def;
# s_def f202(void);
202d0.202e4f202F0sT25s_def
# struct { int member; } f203(void);
203d0.203e4f203F0sT3203.0.0

# Type qualifiers
#
# void f301(const int *);
301d0.301e4f301F1PcIV
# void f302(volatile int *);
302d0.302e4f302F1PvIV
# void f302(const volatile int *);
303d0.303e4f303F1PcvIV
